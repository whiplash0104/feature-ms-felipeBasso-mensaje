# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- azure-pipelines

pool:
  vmImage: ubuntu-latest
  
jobs:
- job: build
  displayName: 'Build'
  steps:
  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        **/build/libs/*.jar
        **/build/**/*.xml
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: appJar
      publishLocation: 'Container'




- job: buildimage
  displayName:  Build Image
  dependsOn: build
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'appJar'
      downloadPath: '$(Pipeline.Workspace)'
    displayName: 'Build'

  - script: "mkdir -p build/libs; mv $(Pipeline.Workspace)/appJar/build/libs/ build/; chmod -R 555 build/libs"  
    displayName:  Se mueve JAR a carpeta raiz
  
  
  - task: Docker@2
    inputs:
      containerRegistry: 'Docker'
      command: 'login'
    displayName: Docker registry login
  
  - task: Docker@2
    displayName: Build an image
    inputs:
      repository: 'felipebasso/feature-ms-felipebasso-mensaje'
      command: 'build'
      Dockerfile: '**/Dockerfile'
      tags: 'latest'


  - task: Docker@2
    displayName: Docker push
    inputs:
      containerRegistry: 'Docker'
      repository: 'felipebasso/feature-ms-felipebasso-mensaje'
      command: 'push'
      tags: 'latest'




  - script: "curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb && sudo dpkg -i minikube_latest_amd64.deb && minikube start"  
    displayName:  Instala y levanta minikube
  
  - script: "kubectl create namespace ms-fbasso"
    displayName: Crea namespace
    
  - script: "kubectl create deployment --image=felipebasso/feature-ms-felipebasso-mensaje:latest deployment-ms-fbasso -n ms-fbasso"
    displayName: Crea deploy
    
  - script: "kubectl scale deployment deployment-ms-fbasso --replicas=1 -n ms-fbasso"
    
  - script: "kubectl get pods -n ms-fbasso"
    displayName: Valida pods
